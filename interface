import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.utils import get_random_id

from config import comunity_token, acces_token
from core import VkTools

from data_store import check_user, add_user, engine


class BotInterface():
    def __init__(self, comunity_token, acces_token):
        self.vk = vk_api.VkApi(token=comunity_token)
        self.longpoll = VkLongPoll(self.vk)
        self.vk_tools = VkTools(acces_token)
        self.params = {}
        self.worksheets = []
        self.offset = 0

    def message_send(self, user_id, message, attachment=None):
        self.vk.method('messages.send',
                       {'user_id': user_id,
                        'message': message,
                        'attachment': attachment,
                        'random_id': get_random_id()}
                       )

# обработка событий / получение сообщений

    def event_handler(self):
        for event in self.longpoll.listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                if event.text.lower() == 'начать':
                    '''Логика для получения данных о пользователе'''
                    self.params = self.vk_tools.get_profile_info(event.user_id)
                    self.message_send(
                        event.user_id, f'Здравствуй, {self.params["name"]}!')
                    if self.params.get('bdate') is None:
                        self.params['bdate'] = self.bdate_request(event.user_id)
                    elif self.params.get('sex') is None:
                        self.params['sex'] = self.sex_request(event.user_id)
                    elif self.params.get('city') is None:
                        self.params['city'] = self.city_request(event.user_id)
                elif event.text.lower() == 'поиск':
                    if self.worksheets:
                        self.add_db(event)
                    else:
                        self.message_send(event.user_id, 'Начинаем поиск')
                        self.worksheets = self.vk_tools.search_worksheet(
                            self.params, self.offset)
                        self.add_db(event)
                        self.offset += 10
                elif event.text.lower() == 'пока':
                    self.message_send(
                        event.user_id, 'До новых встреч')
                else:
                    self.message_send(
                        event.user_id, 'Неизвестная команда')

    def bdate_request(self, user_id):
        self.message_send(user_id, 'Введите дату Вашего рождения в формате ДД.ММ.ГГГГ.(например 1.1.2000):')
        for event in self.longpoll.listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                self.message_send(user_id, 'Чтобы начать подбор кандидатов напиши "поиск".')
                return event.text

    def sex_request(self, user_id):
        self.message_send(user_id, 'Введите: 1 - если Ваш пол женский, 2 - если мужской')
        for event in self.longpoll.listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                self.message_send(user_id, 'Чтобы начать подбор кандидатов напиши "поиск".')
                return event.text

    def city_request(self, user_id):
        self.message_send(user_id, 'Введите город Вашего проживания:')
        for event in self.longpoll.listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                self.message_send(user_id, 'Чтобы начать подбор кандидатов напиши "поиск".')
                return self.vk_tools.get_cities(event.text)

    def add_db(self, event):
        while len(self.worksheets) >= 1:
            worksheet = self.worksheets.pop()
            if check_user(engine, event.user_id, worksheet['id']):
                continue
            photos = self.vk_tools.get_photos(worksheet['id'])
            photo_string = ''
            for photo in photos:
                photo_string += f'photo{photo["owner_id"]}_{photo["id"]},'
            self.message_send(event.user_id,
                              f'имя: {worksheet["name"]} ссылка: vk.com/id{worksheet["id"]}',
                              attachment=photo_string
                              )
            add_user(engine, event.user_id, worksheet['id'])


if __name__ == '__main__':
    bot_interface = BotInterface(comunity_token, acces_token)
    bot_interface.event_handler()
